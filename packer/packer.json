{
    "_comment": "AMI Image With Docker & Nginx",
    "variables": {
        "region": "",
        "source_ami": "",
        "instance_type": "",
        "vpc_id": "",
        "subnet_id": ""
    },
    "_comment1": "packer build -var \"aws_secret_key=foo\" packer.json",
    "_comment2": "packer build -var-file vars.json packer.json",
    "builders": [
        {
            "type": "amazon-ebs",
            "region": "{{user `region`}}",
            "source_ami": "{{user `source_ami`}}",
            "instance_type": "{{user `instance_type`}}",
            "ssh_username": "ubuntu",
            "ami_name": "DevSecOps-Ansible-Image-{{isotime | clean_resource_name}}",
            "vpc_id": "{{user `vpc_id`}}",
            "subnet_id": "{{user `subnet_id`}}",
            "tags": {
                "Name": "DevSecOps-Ansible-Image-{{isotime | clean_resource_name}}"
            }
        }
    ],
    "provisioners": [
        {
            "type": "shell",
            "inline": [
                "sudo useradd -m ansibleadmin --shell /bin/bash",
                "sudo mkdir -p /home/ansibleadmin/.ssh",
                "sudo chown -R ansibleadmin /home/ansibleadmin/",
                "sudo touch /home/ansibleadmin/.ssh/authorized_keys",
                "sudo usermod -aG sudo ansibleadmin",
                "echo 'ansibleadmin ALL=(ALL) NOPASSWD: ALL' | sudo tee -a /etc/sudoers",
                "echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCJ3JlermA3yW1eABmPHShBLAKxMkd9n2ZWvM11XT180Vh/7mW85dI9UL7ffc4d6bgj+MOGB2ZEhoKiZRS0psGfgIGOAGnNjbav3dkLu9YY5VhV+I51gUm/R57nnycpMMe32s7siWGG5vhrIbvM6gRv0iUpoLbXnKL6+cjLNu68j5zSGk2UinKAzs3U3/X2IsHY95/jBjxMZwkfx6lfA//ysiq+9OrRRS5sbenEvGcgUbHhO7PQpBBqP9NmY2ga0gTJqPYr8SEhNr2iTp2QP9JBgvBB+K8fsqHgESvr7qkHQOQ+AB3zQKStL3+Loo1VjCmxeWcyrh1jnTq5TOJ+fJFnWDGtoLDuSgcxVJA+36Ksik+z28JA/o/efrEFQKSEslYYKNYfpwxr96yQ3PYGUK3QSgBgB7GMKfJHr66Uk9qu6puSO1+uSJjMRrzBuAyNnycLar+Abu081bssK//FnXmZeaX7WP5z82hs+Lu3q30UVmNlHJ1mQt/F8FfMt5L/hwE= root@ip-172-31-92-17' | sudo tee /home/ansibleadmin/.ssh/authorized_keys"
            ]
        },
        {
            "type": "shell",
            "inline": [
                "sudo apt update -y",
                "curl https://get.docker.com | bash"
            ]
        },
        {
            "type": "file",
            "source": "docker.service",
            "destination": "/tmp/docker.service"
        },
        {
            "type": "shell",
            "inline": [
                "sudo cp /tmp/docker.service /lib/systemd/system/docker.service",
                "sudo usermod -a -G docker ubuntu",
                "sudo usermod -a -G docker ansibleadmin",
                "sudo systemctl daemon-reload",
                "sudo service docker restart"
            ]
        },
        {
            "type": "shell",
            "inline": [
                "sudo useradd --no-create-home --shell /bin/false node_exporter",
                "wget https://github.com/prometheus/node_exporter/releases/download/v1.3.1/node_exporter-1.3.1.linux-amd64.tar.gz",
                "tar xvf node_exporter-1.3.1.linux-amd64.tar.gz",
                "sudo cp node_exporter-1.3.1.linux-amd64/node_exporter /usr/local/bin/",
                "sudo chown node_exporter:node_exporter /usr/local/bin/node_exporter"
            ]
        },
        {
            "type": "file",
            "source": "node_exporter.service",
            "destination": "/tmp/node_exporter.service"
        },
        {
            "type": "shell",
            "inline": [
                "sudo cp /tmp/node_exporter.service /etc/systemd/system/node_exporter.service",
                "sudo systemctl enable node_exporter",
                "rm -rf node_exporter*"
            ]
        },
        {
            "type": "shell",
            "inline": [
                "sudo apt install -y unzip stress net-tools jq"
            ]
        }
    ]
}